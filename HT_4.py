# Задача 22: Даны два неупорядоченных набора целых чисел 
# (может быть, с повторениями). Выдать без повторений в порядке 
# возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. 
# n — кол-во элементов первого множества.
# m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

# n = int(input('n = '))
# nums1 = []
# for i in range(n):
#     nums1.insert(i, int(input()))
#     i+=1
# print(nums1)

# m = int(input('m = '))
# nums2 = []
# for i in range(m):
#     nums2.insert(i, int(input()))
#     i+=1
# print(nums2)
# res1 =set(nums1)
# res2=set(nums2)
# res=res1.intersection(res2)
# print(res)

# list1= list(res)
# print(list1)
# list= sorted(list1)
# print(list)

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. 
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод —
# на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один 
# заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

n= int(input( 'Введите количество кустов  '))
bushes = []
for i in range(n):
    bushes.insert(i, int(input()))
print(bushes)
b_count=list()
for i in range (len(bushes)-1):
    b_count.append(bushes[i-1]+bushes[i]+bushes[i+1])    #это фуекцией мы посчитали все комбинации, кроме суммы предпоследнего, последнего и первого
b_count.append (bushes[-2]+bushes[-1]+bushes[0])  #подсчитали и добавили в список оставшийся вариант
print(max(b_count))

